/**
 * =====================================
 * ErrorPluginScriptMaster ( thePlugInResult ; theErrorInfo )
 *
 * RETURNS:
 *		Let Notation containing information about the last ScriptMaster
 *		error and the environment it occurred in.
 *
 * PARAMETERS:
 *		thePlugInResult = (text) result of the call to ScriptMaster module
 *		theErrorInfo = (text, optional) some text describing the particular
 *			instance of this error. This should help a developer locate where
 *			in a script the error occured.
 *			(e.g., "create new invoice record")
 *
 * DEPENDENCIES:
 *		Custom Functions: #, Error
 *		Plugin: ScriptMaster
 *
 * HISTORY:
 *		MODIFIED on 2013-NOV-25 by Daniel Smith dansmith65@gmail.com
 *			- add "Plugin: " to the error type
 *		MODIFIED on 2013-NOV-24 by Daniel Smith dansmith65@gmail.com
 *			- add SMVersion to output
 *		MODIFIED on 2013-NOV-22 by Daniel Smith dansmith65@gmail.com
 *			- renamed to ErrorPluginScriptMaster
 *			- return error if module or plugin is not installed
 *			- update documentation
 *		CREATED on 2013-NOV-14 Daniel Smith dansmith65@gmail.com
 *
 * REFERENCES:
 *		http://filemakerstandards.org/x/AoA-/
 * =====================================
 */

Let ( [
	~isError =
		thePlugInResult = "ERROR"
		or thePlugInResult = "?"
		or not IsEmpty ( SMLastError )
		or SMLastError = "?"
	;
	~theErrorCode =
		Case (
		// no error
			not ~isError ;
			0 ;
		// plug-in not installed
			SMLastError = "?" ;
			10000 ;
		// module not registered
			thePlugInResult = "?" ;
			10001 ;
		// map known responses to numeric coded values
//			SMLastError = "some known response" ;
//			1 ;
		// else, use "unknown" code
			-1
		)
	;
	~errorDescription =
		Case (
			~theErrorCode = -1 ;		"Unknown error" ;
			~theErrorCode = 0 ;		"No error" ;
			~theErrorCode = 10000 ;		"ScriptMaster plug-in is not installed" ;
			~theErrorCode = 10001 ;		"Requested module is not registered" ;
		// else
			SMLastError
		)
] ;
	Error ( "Plugin: ScriptMaster" ; ~theErrorCode ; ~errorDescription ; theErrorInfo )
	& If ( ~isError ;
		# ( "plugInResult" ; thePlugInResult )
		& # ( "SMLastError" ; SMLastError )
		& # ( "SMLastStackTrace" ; SMLastStackTrace )
		& # ( "SMGetRegisteredModules" ; SMGetRegisteredModules )
		& # ( "SMGetLoadedJars" ; SMGetLoadedJars )
		& # ( "SMVersion" ; SMVersion )
	)
)